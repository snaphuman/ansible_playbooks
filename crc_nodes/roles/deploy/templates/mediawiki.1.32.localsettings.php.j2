<?php
# This file was automatically generated by the MediaWiki 1.31.1
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings


# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
#$wgDisableOutputCompression = true;

$wgSitename = "Wiki CRC";
$wgMetaNamespace = "Wiki_CRC";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/w";
$wgArticlePath = "/wiki/$1";
$wgScriptExtension  = ".php";
$wgUsePathInfo = true;

## The protocol and server name to use in fully-qualified URLs
{% if env == 'test' %}
	$wgServer = "http://10.0.1.4:{{ item.port }}";
{% elif env == 'prod' %}
	$wgServer = "http://{{ item.server_name }}";
{% endif %}

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/wiki.png";// instrucción para implementar el logo de la Wiki
$wgFavicon = "$wgScriptPath/favicon.ico"; // instrucción para implementar el favicon

## UPO means: this is also a user preference option

$wgEnableEmail = false;
$wgEnableUserEmail = false; # UPO

$wgEmergencyContact = "{{ item.wiki_smtp_username }}";
$wgPasswordSender = "{{ item.wiki_smtp_username }}";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "{{ item.db_host }}";
$wgDBname = "{{  item.dbname }}";
$wgDBuser = "{{ item.dbuser }}";
$wgDBpassword = "{{ item.upasswd }}";

# MySQL specific settings
$wgDBprefix = "crc_";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = true;
# Se agrega la extensión del editor

$wgHiddenPrefs []  =  'usebetatoolbar' ;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = true;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "es";

$wgSecretKey = "{{ item.wiki_secretkey }}";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "c39aa750d2b192a1";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
# The following skins were automatically enabled:
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );
wfLoadSkin( 'Vector' );

# End of automatically generated settings.
# Add more configuration options below.

$wgSMTP = [
 'host'     => "outlook.office365.com",
 'IDHost'   => "crcom.gov.co",
 'port'     => 25,
 'auth'     => false,
 'username' => "{{ item.wiki_smtp_username }}",
 'password' => "{{ item.wiki_smtp_password }}"
];

wfLoadExtension( 'WikiEditor' );// Hace el llamado a la carpeta WikiEditor ubicado en la carpeta extensions
$wgHiddenPrefs[] = 'usebetatoolbar';

wfLoadExtension( 'Popups' ); // Hace el llamado Hace el llamado a la carpeta Popups ubicado en la carpeta extensions
wfLoadExtension ( 'PageImages' ); // Hace el llamado  a la carpeta PageImages ubicado en la carpeta extensions
wfLoadExtension ( 'TextExtracts' ); // Hace el llamado  a la carpeta TextExtracts ubicado en la carpeta extensions
// Aplica comentario a la extensión simpletooltip tras error de compatibilidad en actualización a core v1.32.1
//require_once ("$IP/extensions/SimpleTooltip/SimpleTooltip.php"); // Hace el llamado  a la carpeta SimpleTooltip-master ubicado en la carpeta extension
$wgLogo = $wgScriptPath . '/images/Logo/wikilogo.png'; // Logo principal de la Wiki

wfLoadExtension( 'VisualEditor' );

// Enable by default for everybody
$wgDefaultUserOptions['visualeditor-enable'] = 1;

// Optional: Set VisualEditor as the default for anonymous users
// otherwise they will have to switch to VE
 $wgDefaultUserOptions['visualeditor-editor'] = "visualeditor";

// Don't allow users to disable it
$wgHiddenPrefs[] = 'visualeditor-enable';

$wgVirtualRestConfig['modules']['parsoid'] = array(
    // URL to the Parsoid instance
    // Use port 8142 if you use the Debian package
    'url' => 'http://localhost:8000',
    // Parsoid "domain", see below (optional)
    {% if env == 'test' %}
        'domain' => '10.0.1.4:{{ item.port }}/',
        'prefix' => '10.0.1.4:{{ item.port }}/',
    {% elif env == 'prod' %}
        'domain' => '{{ item.server_name }}/',
        'prefix' => '{{ item.server_name }}/',
    {% endif %}
);

$wgShowExceptionDetails = true; 
$wgShowDBErrorBacktrace = true; 
$wgVectorResponsive = true;

$wgResourceModules['crc.customizations'] = array(
	'styles' => "accesibility_wiki.css",  // Stylesheet to be loaded in all skins
	'scripts' => "accesibility_wiki.js",  // Script file to be loaded in all skins
	'localBasePath' => "$IP/customizations/",
	'remoteBasePath' => "$wgScriptPath/customizations/"
);

$wgResourceModules['bootstrap'] = array(
	'styles' => "bootstrap-grid.css", // Stylesheet to be loaded in all skins
	'localBasePath' => "$IP/customizations/",
	'remoteBasePath' => "$wgScriptPath/customizations/"
);

$wgHooks['BeforePageDisplay'][] = 'efCustomBeforePageDisplay';

function efCustomBeforePageDisplay( &$out, &$skin ) {
	$out->addModules( array( 'crc.customizations', 'bootstrap' ) );
}
